# Unformatted Warning Output:
# File "tests/__tests__/refmterr/__fixtures__/type_IncompatibleType/type_IncompatibleType_5.ml", line 17, characters 5-16:
# Warning 40: this record of type TopNotchModule.myRecord contains fields that are 
# not visible in the current scope: nihao.
# They will not be selected if the type becomes unknown.


 WARNING  tests/__tests__/refmterr/__fixtures__/type_IncompatibleType/type_IncompatibleType_5.ml:17 5-16  [Warning Code 40] 

14 ┆ end
15 ┆ 
16 ┆ let asd: PettyModule.Nested.weAreStrings =
17 ┆   ([[{nihao = 1}]]: TopNotchModule.myRecordListList)



# Unformatted Error Output:
# File "tests/__tests__/refmterr/__fixtures__/type_IncompatibleType/type_IncompatibleType_5.ml", line 17, characters 2-52:
# Error: This expression has type
#          TopNotchModule.myRecordListList = TopNotchModule.myRecordList list
#        but an expression was expected of type
#          PettyModule.Nested.weAreStrings = PettyModule.youAreAString list
#        Type TopNotchModule.myRecordList = TopNotchModule.myRecord list
#        is not compatible with type PettyModule.youAreAString = string 


 ERROR  tests/__tests__/refmterr/__fixtures__/type_IncompatibleType/type_IncompatibleType_5.ml:17 2-52 

14 ┆ end
15 ┆ 
16 ┆ let asd: PettyModule.Nested.weAreStrings =
17 ┆   ([[{nihao = 1}]]: TopNotchModule.myRecordListList)

This type doesn't match what is expected.

  This type:
    TopNotchModule.myRecordListList
    Equals
    list(TopNotchModule.myRecordList)

  Expecting:
    PettyModule.Nested.weAreStrings
    Equals
    list(PettyModule.youAreAString)


The contradicting part:

  The type:   
    TopNotchModule.myRecordList
    Equals
    list(TopNotchModule.myRecord)

  Contradicts:
    PettyModule.youAreAString
    Equals
    string



