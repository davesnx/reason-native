# Unformatted Error Output:
# File "tests/__tests__/refmterr/__fixtures__/type_IncompatibleType/type_IncompatibleType_8.ml", line 4, characters 391-398:
# Error: This expression has type int * int * int * int * int
#        but an expression was expected of type
#          reallyReallyLongNameWillBreak * reallyReallyLongNameWillBreak *
#          reallyReallyLongNameWillBreak * reallyReallyLongNameWillBreak *
#          reallyReallyLongNameWillBreak
#        Type int is not compatible with type reallyReallyLongNameWillBreak 


 ERROR  tests/__tests__/refmterr/__fixtures__/type_IncompatibleType/type_IncompatibleType_8.ml:4 391-398 

 1 ┆ 
 2 ┆ type reallyReallyLongNameWillBreak
 3 ┆ let numbers = (0, 2, 3, 4, 5)
 4 ┆ let thisFunction (f: (reallyReallyLongNameWillBreak * reallyReallyLongNameWillBreak * reallyReallyLongNameWillBreak * reallyReallyLongNameWillBreak * reallyReallyLongNameWillBreak) -> (reallyReallyLongNameWillBreak * reallyReallyLongNameWillBreak * reallyReallyLongNameWillBreak * reallyReallyLongNameWillBreak * reallyReallyLongNameWillBreak) -> unit list -> string list -> 'args) args = f numbers numbers [(); ()] ["anotherString"] ()
 5 ┆ 
 6 ┆ let result = thisFunction (fun aa c u -> aa + b +c)
 7 ┆ 

This type doesn't match what is expected.

  This type:
    (int, int, int, int, int)

  Expecting:
    (
      reallyReallyLongNameWillBreak,
      reallyReallyLongNameWillBreak,
      reallyReallyLongNameWillBreak,
      reallyReallyLongNameWillBreak,
      reallyReallyLongNameWillBreak
    )


The contradicting part:

  The type:    int
  Contradicts: reallyReallyLongNameWillBreak



