# Unformatted Error Output:
# File "tests/__tests__/refmterr/__fixtures__/type_IncompatibleType/type_IncompatibleType_7.ml", line 15, characters 13-16:
# Error: This expression has type Abc.myInt -> Def.myFloat
#        but an expression was expected of type Abc.myString -> Def.myBool
#        Type Abc.myInt = int is not compatible with type Abc.myString = string 


 ERROR  tests/__tests__/refmterr/__fixtures__/type_IncompatibleType/type_IncompatibleType_7.ml:15 13-16 

12 ┆ 
13 ┆ let dec (f: Abc.myString -> Def.myBool) = 1
14 ┆ 
15 ┆ let () = dec inc

This type doesn't match what is expected.

  This type: Abc.myInt => Def.myFloat
  Expecting: Abc.myString => Def.myBool


The contradicting part:

  The type:   
    Abc.myInt
    Equals
    int

  Contradicts:
    Abc.myString
    Equals
    string



