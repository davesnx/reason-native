# Unformatted Error Output:
# File "tests/__tests__/refmterr/__fixtures__/type_SignatureItemMismatch/type_SignatureItemMismatch_4.ml", line 7, characters 24-91:
# Error: Signature mismatch:
#        Modules do not match:
#          sig
#            val hasWrongType : 'a -> int
#            val hasWrongType2 : 'a -> string
#          end
#        is not included in
#          Sig
#        Values do not match:
#          val hasWrongType : 'a -> int
#        is not included in
#          val hasWrongType : string -> unit
#        File "tests/__tests__/refmterr/__fixtures__/type_SignatureItemMismatch/type_SignatureItemMismatch_4.ml", line 3, characters 2-34:
#          Expected declaration
#        File "tests/__tests__/refmterr/__fixtures__/type_SignatureItemMismatch/type_SignatureItemMismatch_4.ml", line 8, characters 6-18:
#          Actual declaration


 ERROR  tests/__tests__/refmterr/__fixtures__/type_SignatureItemMismatch/type_SignatureItemMismatch_4.ml:7:24-10:3 

 4 ┆   val hasWrongType2: string -> unit
 5 ┆ end
 6 ┆ 
 7 ┆ module MyModule : Sig = struct
 8 ┆   let hasWrongType s = 0
 9 ┆   let hasWrongType2 s = "wrong"
10 ┆ end

This module doesn't match its signature because the value hasWrongType has the wrong type

  At tests/__tests__/refmterr/__fixtures__/type_SignatureItemMismatch/type_SignatureItemMismatch_4.ml:3
  the signature required that hasWrongType be of type:

  string => unit


  At tests/__tests__/refmterr/__fixtures__/type_SignatureItemMismatch/type_SignatureItemMismatch_4.ml:8
  your module defined hasWrongType having type:

  'a => int




